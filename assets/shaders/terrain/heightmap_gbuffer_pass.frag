#version 450 core
#include"../octmap.glsl"
in vec3 WorldPos;in vec2 TexCoords;layout(location=0)out vec3 GBuffer0;layout(location=1)out vec3 GBuffer1;layout(location=2)out vec3 GBuffer2;layout(binding=0)uniform sampler2D heightMap;layout(binding=1)uniform sampler2D blendMap;struct Material{sampler2D diffuse;sampler2D normal;sampler2D roughness;sampler2D ao;float scale;};uniform Material materials[4];uniform vec3 cameraPosition;vec3 t(){vec2 T=1./textureSize(heightMap,0);return normalize(vec3(texture(heightMap,TexCoords-vec2(T.x,0)).x*150.-texture(heightMap,TexCoords+vec2(T.x,0)).x*150.,2,texture(heightMap,TexCoords-vec2(0,T.y)).x*150.-texture(heightMap,TexCoords+vec2(0,T.y)).x*150.));}mat3 t(vec3 T){vec2 m=dFdx(TexCoords),n=dFdy(TexCoords);vec3 s=cross(dFdy(WorldPos),T),x=cross(T,dFdx(WorldPos)),e=s*m.x+x*n.x;s=s*m.y+x*n.y;float p=inversesqrt(max(dot(e,e),dot(s,s)));return mat3(e*p,s*p,T);}void main(){vec4 T=texture(blendMap,TexCoords);float m=1.-T.x-T.y-T.z,s=m+T.x+T.y+T.z;if(s>0.)m/=s,T/=s;vec3 e=t(),n=vec3(0),x=vec3(0);s=0.;float v=0.;if(m>.001)n+=texture(materials[0].diffuse,TexCoords*materials[0].scale).xyz*m,x+=texture(materials[0].normal,TexCoords*materials[0].scale).xyz*m,s+=texture(materials[0].roughness,TexCoords*materials[0].scale).x*m,v+=texture(materials[0].ao,TexCoords*materials[0].scale).x*m;for(int m=0;m<3;m++)if(T[m]>.001)n+=texture(materials[m+1].diffuse,TexCoords*materials[m+1].scale).xyz*T[m],x+=texture(materials[m+1].normal,TexCoords*materials[m+1].scale).xyz*T[m],s+=texture(materials[m+1].roughness,TexCoords*materials[m+1].scale).x*T[m],v+=texture(materials[m+1].ao,TexCoords*materials[m+1].scale).x*T[m];vec3 l=e;if(length(cameraPosition-WorldPos)<5e2&&length(x)>.1){vec3 m=normalize(x*2.-1.);l=normalize(t(e)*m);}GBuffer0=n;GBuffer1=signed_float32x3_to_oct(l);GBuffer2=vec3(s,0,v);}