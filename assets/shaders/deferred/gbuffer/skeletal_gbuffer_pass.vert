#version 430
layout(location=0)in vec3 aPos;layout(location=1)in vec3 aNormal;layout(location=2)in vec2 aTexCoords;layout(location=3)in vec3 aTangent;layout(location=4)in vec3 bitangent;layout(location=5)in ivec4 boneIds;layout(location=6)in vec4 weights;out vec3 FragPos;out vec2 TexCoords;out mat3 TangentToWorldMatrix;uniform mat4 model,finalBonesMatrices[100];layout(std140, binding = 6)uniform Matrices{mat4 projection;mat4 view;};void main(){TexCoords=aTexCoords;vec4 v=vec4(0);for(int b=0;b<4;b++){if(boneIds[b]==-1)continue;if(boneIds[b]>=100){v=vec4(aPos,1);break;}vec4 n=finalBonesMatrices[boneIds[b]]*vec4(aPos,1);v+=n*weights[b];}mat3 n=transpose(inverse(mat3(finalBonesMatrices[boneIds[0]]*weights[0]+finalBonesMatrices[boneIds[1]]*weights[1]+finalBonesMatrices[boneIds[2]]*weights[2]+finalBonesMatrices[boneIds[3]]*weights[3])));TangentToWorldMatrix=mat3(normalize(n*aTangent),normalize(n*bitangent),normalize(n*aNormal));FragPos=vec3(model*v);TexCoords=aTexCoords;mat4 w=view*model;gl_Position=projection*w*v;}