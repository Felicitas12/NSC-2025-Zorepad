#version 430
#include"../../octmap.glsl"
layout(location=0)out vec4 GBuffer0;layout(location=1)out vec3 GBuffer1;layout(location=2)out vec3 GBuffer2;in vec2 TexCoords;in mat3 TangentToWorldMatrix;layout(binding=0)uniform sampler2D texture_diffuse;layout(binding=1)uniform sampler2D texture_normal;layout(binding=2)uniform sampler2D texture_metallic;layout(binding=3)uniform sampler2D texture_roughness;layout(binding=4)uniform sampler2D texture_ambient_occlusion;layout(binding=5)uniform sampler2D texture_emissive;uniform bool is_gltf;void main(){vec4 t=texture(texture_diffuse,TexCoords);if(t.w<.5)discard;float l,T,s;if(is_gltf){const vec3 t=texture(texture_metallic,TexCoords).xyz;l=t.y;T=t.z;s=t.x;}else l=texture(texture_roughness,TexCoords).x,T=texture(texture_metallic,TexCoords).x,s=texture(texture_ambient_occlusion,TexCoords).x;GBuffer0.xyz=t.xyz;GBuffer0.w=texture(texture_emissive,TexCoords).x;vec3 G,n=TangentToWorldMatrix[0],b=TangentToWorldMatrix[1],g=TangentToWorldMatrix[2];n-=g*dot(n,g);b-=g*dot(b,g);b-=n*dot(b,n);mat3 v=mat3(normalize(n),normalize(b),g);G=normalize(v*(texture(texture_normal,TexCoords).xyz*2.-1.));GBuffer1=signed_float32x3_to_oct(normalize(G));GBuffer2=vec3(l,T,s);}